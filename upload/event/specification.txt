
でももともとハードウェアの設計もドメインスペシフィックだから、スケーラビリティはあまりない？とするならば、今後も長期的にバージョンアップする、または、これはプロトタイプとしておくのか。試験的に、ある特定のシーンのみで実戦投入してみるのか。
そうした、スケーラビリティを求めるのであれば
という前提背景をもとに


ユーザイベントを監視する間隔は0.01secで今後も一定なのか、何か可変する必要に迫られるシーンが来る可能性が有るのか。プロセスのcpu使用率？
その辺りを考慮して、スケーラブルにするのかそれともフローズンスポットとしておくのか。
例）赤外線センサを感知、一定時間温度を感知。

以下リスナとハンドラ含めたパイソンモジュールやパッケージの設計

イベントリスナの設計
監視間隔時間の設定が可能にする機能
	①LOW/HIGHのとき、全部通知
	②LOW/HIGHに変化した時、一度だけ通知


イベントハンドラの設計
以下各ストラテジの用意
	①シングルクリック
	②ダブルクリック
	③決められた時間以内の長押し



クライアントスクリプト(module)の設計
→パッチプログラムまたはパラメータ変更のみでシステム設定の変更が可能なようにする。


独自キャリアボードのGPIOピンの設定データの定義モジュールの作成
既存ライブラリには手を加えないから、それを拡張する
が、余分な定義はどうする？
わからない
